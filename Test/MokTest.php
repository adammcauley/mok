<?php

require_once dirname(__FILE__) . '/../Mok.php';

/**
 * Test class for Mok.
 * Generated by PHPUnit on 2012-04-18 at 16:05:20.
 */
class MokTest
        extends PHPUnit_Framework_TestCase
{

    /**
     * @var Mok
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Mok;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->object = null;
    }

    /**
     * @covers Mok::___lock
     * @todo Implement test___lock().
     */
    public function test___lock()
    {
        $testParam = 5;
        $testResult = 10;

        $first = $this->object->foo($testParam, $testResult);

        $this->assertEquals($this->object, $first);

        $this->object->___lock();
        $second = $this->object->foo($testParam);

        $this->assertEquals($testResult, $second);
    }

    /**
     * @covers Mok::__set
     * @todo Implement test__set().
     */
    public function test__set()
    {
        $testPropertyName = 'fooMatilda';
        $testValue = 'this is a test value';
        $testValue2 = 'this is another test value';

        $first = ($this->object->$testPropertyName = $testValue);
        $this->assertEquals($this->object, $first, 'failed first');

//        $second = $this->object->$testPropertyName;
//        $this->assertEquals($testValue, $second, 'failed second');
//
//        $this->object->___lock();
//
//        $third = $this->object->$testPropertyName = $testValue2;
//        $this->assertEquals($this->object, $third, 'failed third');
//
//        $forth = $this->object->$testPropertyName;
//        $this->assertEquals($testValue2, $forth, 'failed forth');


    }

    /**
     * @covers Mok::__get
     * @todo Implement test__get().
     */
    public function test__get()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mok::__call
     * @todo Implement test__call().
     */
    public function test__call()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mok::__toString
     * @todo Implement test__toString().
     */
    public function test__toString()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}

?>
